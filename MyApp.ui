<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1417</width>
    <height>887</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>1024</width>
    <height>648</height>
   </size>
  </property>
  <property name="contextMenuPolicy">
   <enum>Qt::PreventContextMenu</enum>
  </property>
  <property name="windowTitle">
   <string>NeoLensa</string>
  </property>
  <property name="windowIcon">
   <iconset resource="resources.qrc">
    <normaloff>:/icons/img/NL_logo.ico</normaloff>:/icons/img/NL_logo.ico</iconset>
  </property>
  <property name="windowOpacity">
   <double>1.000000000000000</double>
  </property>
  <property name="autoFillBackground">
   <bool>false</bool>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
   background-image: url(&quot;:/icons/img/background-img (2).png&quot;);
   background-repeat: no-repeat;
   background-position: center;
	background-size: cover;
}</string>
  </property>
  <property name="iconSize">
   <size>
    <width>50</width>
    <height>50</height>
   </size>
  </property>
  <property name="animated">
   <bool>false</bool>
  </property>
  <property name="tabShape">
   <enum>QTabWidget::Rounded</enum>
  </property>
  <property name="dockNestingEnabled">
   <bool>false</bool>
  </property>
  <widget class="QWidget" name="centralwidget">
   <property name="sizePolicy">
    <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="autoFillBackground">
    <bool>false</bool>
   </property>
   <layout class="QHBoxLayout" name="horizontalLayout">
    <property name="spacing">
     <number>0</number>
    </property>
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <item>
     <widget class="QFrame" name="menu_frame">
      <property name="minimumSize">
       <size>
        <width>380</width>
        <height>0</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>360</width>
        <height>16777215</height>
       </size>
      </property>
      <property name="styleSheet">
       <string notr="true">QFrame {
    background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek effect */
    filter: blur(5px); /* Reduced blur for clarity */
    height: 100vh;
    width: 250px; /* Sidebar-style menu width */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transition */
    /* border-radius: 12px; /* Rounded corners */
}

/* Focus effect for better visibility */
QFrame:focus {
    background-color: rgba(31, 42, 68, 0.8); /* Midnight Blue for emphasis */
}</string>
      </property>
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <layout class="QVBoxLayout" name="verticalLayout_2">
       <item>
        <widget class="QTabWidget" name="tabWidget">
         <property name="font">
          <font>
           <family>Cascadia Code</family>
          </font>
         </property>
         <property name="styleSheet">
          <string notr="true">/* Center align the tab bar */
QTabWidget::tab-bar {
    alignment: center;
}

/* Style each tab */
QTabBar::tab {
    color: #4d5966; /* Gunmetal Gray for text */
    border-radius: 12px; /* Slightly more rounded corners */
    padding: 5px 20px; /* Increased padding for proper text spacing */
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    transition: all 0.2s ease-in-out; /* Smooth hover and active transitions */
    font: 14px; /* Consistent font size and family */
    min-width: 100px; /* Ensure enough width for text */
    min-height: 40px; /* Ensure enough height for text */
    text-align: center; /* Center-align text */
}

/* Hover effect for tabs */
QTabBar::tab:hover {
    background-color: rgba(0, 255, 204, 0.2); /* Neon Aqua with slight transparency */
    color: #ffffff; /* White text for contrast */
	border: 2px solid #27b2fd; /* Blue border */
}

/* Active (selected) tab */
QTabBar::tab:selected {
    font: bold 14px; /* Bold font for emphasis */
    color: #f1b531; /* Golden Yellow for active tab text */
    
    background-color: rgba(31, 42, 68, 0.9); /* Slightly darker Midnight Blue background */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow for depth */
    padding: 8px 18px; /* Adjusted padding for better fit */
}

/* Style the tab pane (content area) */
QTabWidget::pane {
	border: 2px solid #00ffcc; /* Neon Aqua border */
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black */
    border-radius: 10px; /* Rounded corners */
    margin: 0px; /* Remove any margin */
}

/* Remove padding inside QTabWidget */
QTabWidget QWidget {
    background-color: transparent; /* Transparent inner content */
    color: #f1f1f1; /* Light text */
    margin: 0px;
    padding: 0px;
}</string>
         </property>
         <property name="tabPosition">
          <enum>QTabWidget::North</enum>
         </property>
         <property name="tabShape">
          <enum>QTabWidget::Rounded</enum>
         </property>
         <property name="currentIndex">
          <number>0</number>
         </property>
         <property name="iconSize">
          <size>
           <width>25</width>
           <height>25</height>
          </size>
         </property>
         <widget class="QWidget" name="realtime_tab">
          <attribute name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/Live_icon (6).ico</normaloff>:/icons/icons/Live_icon (6).ico</iconset>
          </attribute>
          <attribute name="title">
           <string>Realtime</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout_3">
           <item>
            <widget class="QToolBox" name="toolBox_3">
             <property name="minimumSize">
              <size>
               <width>280</width>
               <height>0</height>
              </size>
             </property>
             <property name="font">
              <font>
               <family>Cascadia Code</family>
               <pointsize>12</pointsize>
              </font>
             </property>
             <property name="styleSheet">
              <string notr="true">/* Style the QToolBox tab headers */
QToolBox::tab {
    color: #4d5966; /* Gunmetal Gray for text to maintain a modern look */
    border-radius: 10px; /* Slight rounding on tabs */
    padding: 5px 10px; /* Space inside the tabs */
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency for the tab background */
    transition: background-color 0.2s ease-in-out; /* Smooth hover transition */
}

/* Hover state for tabs */
QToolBox::tab:hover {
    background-color: rgba(0, 255, 204, 0.2); /* Neon Aqua with slight transparency for hover */
    color: #FFFFFF; /* White text for contrast */
}

/* Style the active tab header */
QToolBox::tab:selected {
    font: bold 16px;
    color: #f1b531; /* Golden Yellow for active tab text */
    border: 2px solid #00ffcc; /* Neon Aqua for the active tab border */
    background-color: rgba(31, 42, 68, 0.8); /* Midnight Blue for active tab background */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow effect for emphasis */
}

/* Style the content inside the QToolBox */
QToolBox QWidget {
    border-radius: 8px;
    filter: blur(5px); /* Lighter blur effect */
}</string>
             </property>
             <property name="frameShape">
              <enum>QFrame::Panel</enum>
             </property>
             <property name="frameShadow">
              <enum>QFrame::Raised</enum>
             </property>
             <property name="currentIndex">
              <number>0</number>
             </property>
             <widget class="QWidget" name="realtime_setting_heading">
              <property name="geometry">
               <rect>
                <x>0</x>
                <y>0</y>
                <width>336</width>
                <height>629</height>
               </rect>
              </property>
              <attribute name="label">
               <string>Settings</string>
              </attribute>
              <layout class="QVBoxLayout" name="verticalLayout_5">
               <item alignment="Qt::AlignHCenter">
                <widget class="QLabel" name="label_21">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 18px;
    font-weight: bold;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                 </property>
                 <property name="text">
                  <string>Input</string>
                 </property>
                 <property name="scaledContents">
                  <bool>true</bool>
                 </property>
                 <property name="wordWrap">
                  <bool>false</bool>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_13">
                 <item>
                  <widget class="QLabel" name="label_2">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>Cam 1:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="realtime_lineedit1">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLineEdit {
    color: #15e7e0; /* Text color matching the logo */
    font-size: 14px;
    font-weight: normal;
    background: transparent; /* No background */
    border: none; /* No border */
    border-bottom: 2px solid #27b2fd; /* Subtle underline effect */
    padding: 5px;
    selection-background-color: #42ddbc; /* Highlighted text background */
}

/* Style for when the QLineEdit is focused (active input) */
QLineEdit:focus {
    border-bottom: 2px solid #f1b531; /* Change to golden yellow when active */
    color: #91ecfe; /* Slightly lighter text color */
}</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_14">
                 <item>
                  <widget class="QLabel" name="label_11">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>Cam 2:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="realtime_lineedit2">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLineEdit {
    color: #15e7e0; /* Text color matching the logo */
    font-size: 14px;
    font-weight: normal;
    background: transparent; /* No background */
    border: none; /* No border */
    border-bottom: 2px solid #27b2fd; /* Subtle underline effect */
    padding: 5px;
    selection-background-color: #42ddbc; /* Highlighted text background */
}

/* Style for when the QLineEdit is focused (active input) */
QLineEdit:focus {
    border-bottom: 2px solid #f1b531; /* Change to golden yellow when active */
    color: #91ecfe; /* Slightly lighter text color */
}</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <spacer name="verticalSpacer_14">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item alignment="Qt::AlignHCenter|Qt::AlignVCenter">
                <widget class="QLabel" name="label_12">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 18px;
    font-weight: bold;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                 </property>
                 <property name="text">
                  <string>Model selection</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_20">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>5</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <widget class="QComboBox" name="realtime_modelselection">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Base QComboBox Style */
QComboBox {
    color: #15e7e0; /* Text color from logo */
    font-size: 14px;
    font-weight: bold;
    background: transparent; /* No background */
    border: 2px solid #27b2fd; /* Subtle blue border */
    border-radius: 5px;
    padding: 5px 10px;
}

/* Remove the default dropdown button background */
QComboBox::drop-down {
    border: none;
    background: transparent;
}

/* Dropdown List */
QComboBox QAbstractItemView {
    background-color: rgba(31, 42, 68, 0.9); /* Midnight blue with transparency */
    border: 2px solid #27b2fd; /* Blue border */
    selection-background-color: #f1b531; /* Golden yellow highlight */
    selection-color: #ffffff; /* White text */
    border-radius: 5px;
    padding: 5px;
}

/* Hover and Focus Effects */
QComboBox:hover, QComboBox:focus {
    border: 2px solid #f1b531; /* Change border color when active */
    color: #91ecfe; /* Slightly lighter text color */
}</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_15">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item alignment="Qt::AlignHCenter">
                <widget class="QLabel" name="label_22">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 18px;
    font-weight: bold;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                 </property>
                 <property name="text">
                  <string>Threshold</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_22">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>5</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_23">
                 <item alignment="Qt::AlignRight">
                  <widget class="QLabel" name="label_25">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>Conf:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_12">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>2</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="realtime_conf_spinbox">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Style for the QSpinBox container */
QSpinBox {
    color: #f1f1f1;  /* Light text color */
    background-color: transparent;  /* No background */
    border: none;  /* No border */
    font-size: 16px;  /* Set font size */
    padding: 5px;  /* Padding inside the spin box */
}

/* Style for the up and down buttons in the QSpinBox */
QSpinBox::up-button, QSpinBox::down-button {
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    border: none;  /* No border */
    width: 20px;  /* Set width for buttons */
    height: 20px;  /* Set height for buttons */
    color: #f1f1f1;  /* Light text color for button */
}

/* Hover effect for the up and down buttons */
QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    background-color: rgba(0, 255, 204, 0.2);  /* Neon Aqua with slight transparency */
    color: #ffffff;  /* White text for contrast */
}

/* Style when the spinbox is focused (i.e., clicked or active) */
QSpinBox:focus {
    border: 2px solid #00ffcc;  /* Neon Aqua border */
    background-color: rgba(31, 42, 68, 0.8); /* Slightly darker Midnight Blue background */
    color: #f1b531;  /* Golden Yellow text */
}</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSlider" name="realtime_conf_horizontalslider">
                   <property name="styleSheet">
                    <string notr="true">/* Base style for QSlider */
QSlider {
    background: transparent; /* No background */
    border: none;
    height: 8px; /* Slider height */
}

/* Handle of the slider */
QSlider::handle {
    background: #42ddbc; /* Color matching the logo */
    border: 2px solid #27b2fd; /* Blue border */
    width: 18px; /* Handle size */
    height: 18px;
    border-radius: 9px; /* Rounded handle */
    margin: -5px 0; /* Adjust handle positioning */
}

/* Hover effect for the slider handle */
QSlider::handle:hover {
    background: #f1b531; /* Golden Yellow on hover */
    border: 2px solid #00ffcc; /* Neon Aqua border */
}

/* Slider groove (the background of the slider) */
QSlider::groove:horizontal {
    border-radius: 4px;
    background: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    height: 8px;
}

/* Style the slider groove when the slider is active */
QSlider::groove:horizontal:active {
    background: rgba(31, 42, 68, 0.8); /* Darker shade for active groove */
}

/* Style for the tick marks on the slider (if enabled) */
QSlider::tick {
    background: #27b2fd; /* Blue color for ticks */
}

/* Style the ticks on hover */
QSlider::tick:hover {
    background: #f1b531; /* Golden Yellow for tick hover */
}</string>
                   </property>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_22">
                 <item alignment="Qt::AlignRight">
                  <widget class="QLabel" name="label_24">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>IoU:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_11">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>11</width>
                     <height>5</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="realtime_iou_spinbox">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Style for the QSpinBox container */
QSpinBox {
    color: #f1f1f1;  /* Light text color */
    background-color: transparent;  /* No background */
    border: none;  /* No border */
    font-size: 16px;  /* Set font size */
    padding: 5px;  /* Padding inside the spin box */
}

/* Style for the up and down buttons in the QSpinBox */
QSpinBox::up-button, QSpinBox::down-button {
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    border: none;  /* No border */
    width: 20px;  /* Set width for buttons */
    height: 20px;  /* Set height for buttons */
    color: #f1f1f1;  /* Light text color for button */
}

/* Hover effect for the up and down buttons */
QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    background-color: rgba(0, 255, 204, 0.2);  /* Neon Aqua with slight transparency */
    color: #ffffff;  /* White text for contrast */
}

/* Style when the spinbox is focused (i.e., clicked or active) */
QSpinBox:focus {
    border: 2px solid #00ffcc;  /* Neon Aqua border */
    background-color: rgba(31, 42, 68, 0.8); /* Slightly darker Midnight Blue background */
    color: #f1b531;  /* Golden Yellow text */
}</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSlider" name="realtime_iou_horizontalslider">
                   <property name="styleSheet">
                    <string notr="true">/* Base style for QSlider */
QSlider {
    background: transparent; /* No background */
    border: none;
    height: 8px; /* Slider height */
}

/* Handle of the slider */
QSlider::handle {
    background: #42ddbc; /* Color matching the logo */
    border: 2px solid #27b2fd; /* Blue border */
    width: 18px; /* Handle size */
    height: 18px;
    border-radius: 9px; /* Rounded handle */
    margin: -5px 0; /* Adjust handle positioning */
}

/* Hover effect for the slider handle */
QSlider::handle:hover {
    background: #f1b531; /* Golden Yellow on hover */
    border: 2px solid #00ffcc; /* Neon Aqua border */
}

/* Slider groove (the background of the slider) */
QSlider::groove:horizontal {
    border-radius: 4px;
    background: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    height: 8px;
}

/* Style the slider groove when the slider is active */
QSlider::groove:horizontal:active {
    background: rgba(31, 42, 68, 0.8); /* Darker shade for active groove */
}

/* Style for the tick marks on the slider (if enabled) */
QSlider::tick {
    background: #27b2fd; /* Blue color for ticks */
}

/* Style the ticks on hover */
QSlider::tick:hover {
    background: #f1b531; /* Golden Yellow for tick hover */
}</string>
                   </property>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <spacer name="verticalSpacer_9">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <widget class="QRadioButton" name="no_recording_radiobutton">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Style for QRadioButton (checkbox style) */
QRadioButton {
    color: #15e7e0;  /* Light text color */
    font-size: 16px;  /* Set font size */
    padding: 5px 20px;  /* Add padding */
    border: none;  /* No border */
    background: transparent;  /* Transparent background */
    spacing: 10px;  /* Space between checkbox and label */
    margin-left: 10px;  /* Ensure there's space for the text */
}

/* Style for the checkbox indicator (unchecked) */
QRadioButton::indicator {
    width: 18px;  /* Set the size of the checkbox */
    height: 18px;  /* Set the size of the checkbox */
    border: 2px solid #27b2fd;  /* Subtle blue border */
    border-radius: 10px;  /* Slightly rounded corners for checkbox */
    background-color: transparent;  /* Transparent background */
}

/* Style for the checkbox indicator when checked */
QRadioButton::indicator:checked {
    background-color: #f1b531;  /* Golden yellow background when checked */
    border: 2px solid #f1b531;  /* Golden yellow border */
    /*image: url(:/icons/icons/crossed (1).ico);  /* Optional: Add a checkmark image */
}

/* Hover effect for QRadioButton */
QRadioButton:hover {
    color: #f1b531;  /* Change text color to golden yellow on hover */
}

/* Focused state (when the checkbox is focused) */
QRadioButton:focus {
    outline: none;  /* Remove outline when focused */
}

/* Disabled state for QRadioButton */
QRadioButton:disabled {
    color: #4d5966;  /* Dim the text color to indicate disabled state */
}
</string>
                 </property>
                 <property name="text">
                  <string> Disable Auto-Recording</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_13">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Expanding</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>250</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item alignment="Qt::AlignHCenter|Qt::AlignVCenter">
                <widget class="QPushButton" name="realtime_archive_pushbutton">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Default QPushButton style */
QPushButton {
    color: #15e7e0; /* Primary logo color */
    text-align: left; /* Align text to the left */
    background: transparent; /* No background */
    border: none; /* No border */
    font-size: 16px; /* Default font size */
    font-weight: bold; /* Bold text */
    padding: 5px 10px 5px 26px; /* Add padding to the left for the larger icon */
    image: url(:/icons/icons/archive (5).ico); /* Default icon */
    image-position: left center; /* Position the icon to the left */
    min-width: 30px; /* Ensure the icon area is wide enough */
    min-height: 30px; /* Ensure the icon area is tall enough */
}

/* Hover effect for QPushButton */
QPushButton:hover {
    color: #f1b531; /* Highlight with logo's aqua color */
    font-weight: bold; /* Bold text on hover */
    image: url(:/icons/icons/archive (3).ico); /* Hover icon */
    background-color: rgba(241, 181, 49, 0.1); /* Subtle hover background */
    border-radius: 4px; /* Rounded corners on hover */
}

/* Pressed state for QPushButton */
QPushButton:pressed {
    color: #27b2fd; /* Brighter blue for pressed effect */
    font-size: 16px; /* Reset font size */
    background-color: rgba(39, 178, 253, 0.1); /* Subtle pressed background */
    border-radius: 4px; /* Rounded corners on press */
	image: url(:/icons/icons/archive (5).ico); /* Default icon */
}

/* Disabled state for QPushButton */
QPushButton:disabled {
    color: #15e7e0; /* Primary logo color with reduced opacity */
    opacity: 0.5; /* Reduce opacity for disabled state */
    image: url(:/icons/icons/archive (5).ico); /* Default icon */
}</string>
                 </property>
                 <property name="text">
                  <string>            Archive               </string>
                 </property>
                 <property name="iconSize">
                  <size>
                   <width>50</width>
                   <height>50</height>
                  </size>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
             <widget class="QWidget" name="filter_header_3">
              <property name="geometry">
               <rect>
                <x>0</x>
                <y>0</y>
                <width>336</width>
                <height>629</height>
               </rect>
              </property>
              <attribute name="label">
               <string>Filters</string>
              </attribute>
              <layout class="QVBoxLayout" name="verticalLayout_14">
               <item>
                <widget class="QRadioButton" name="realtime_ClassNames_radiobutton">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Style for QRadioButton (checkbox style) */
QRadioButton {
    color: #15e7e0;  /* Light text color */
    font-size: 16px;  /* Set font size */
    padding: 5px 20px;  /* Add padding */
    border: none;  /* No border */
    background: transparent;  /* Transparent background */
    spacing: 10px;  /* Space between checkbox and label */
    margin-left: 10px;  /* Ensure there's space for the text */
}

/* Style for the checkbox indicator (unchecked) */
QRadioButton::indicator {
    width: 18px;  /* Set the size of the checkbox */
    height: 18px;  /* Set the size of the checkbox */
    border: 2px solid #27b2fd;  /* Subtle blue border */
    border-radius: 10px;  /* Slightly rounded corners for checkbox */
    background-color: transparent;  /* Transparent background */
}

/* Style for the checkbox indicator when checked */
QRadioButton::indicator:checked {
    background-color: #f1b531;  /* Golden yellow background when checked */
    border: 2px solid #f1b531;  /* Golden yellow border */
    image: url(:/path/to/checkmark.png);  /* Optional: Add a checkmark image */
}

/* Hover effect for QRadioButton */
QRadioButton:hover {
    color: #f1b531;  /* Change text color to golden yellow on hover */
}

/* Focused state (when the checkbox is focused) */
QRadioButton:focus {
    outline: none;  /* Remove outline when focused */
}

/* Disabled state for QRadioButton */
QRadioButton:disabled {
    color: #4d5966;  /* Dim the text color to indicate disabled state */
}
</string>
                 </property>
                 <property name="text">
                  <string>class_name</string>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </widget>
           </item>
           <item>
            <spacer name="verticalSpacer_11">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>5</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_8">
             <item>
              <widget class="QPushButton" name="realtime_reset_button_2">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #2b3037; /* Charcoal Black background for a modern, robust feel */
    color: #f1b531; /* White text for clarity */
    border: 2px solid #f1b531; /* Golden Yellow border for a vibrant contrast */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Segoe UI&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color: #f1b531; /* Golden Yellow for the hover background */
    color: #1f2a44; /* Midnight Blue text for contrast */
    border-color: #e6c31b; /* Softer Golden Yellow border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(241, 181, 49, 0.3); /* Soft golden glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Reset</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="realtime_apply_button">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <italic>false</italic>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #2b3037; /* Charcoal Black background for a modern, robust feel */
    color: #00ffcc; /* Neon Aqua text for a vibrant, futuristic look */
    border: 2px solid #00ffcc; /* Neon Aqua border to maintain consistency */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Cascadia Code&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color: #00ffcc; /* Neon Aqua for the hover background */
    color: #1f2a44; /* Midnight Blue for contrast text */
    border-color: #00ffcc; /* Keep the border the same on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(0, 255, 204, 0.3); /* Soft glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Apply</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
         <widget class="QWidget" name="offline_tab">
          <attribute name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/unlive_icon (5).ico</normaloff>:/icons/icons/unlive_icon (5).ico</iconset>
          </attribute>
          <attribute name="title">
           <string>Offline</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout_9">
           <item>
            <widget class="QToolBox" name="toolBox_2">
             <property name="minimumSize">
              <size>
               <width>280</width>
               <height>0</height>
              </size>
             </property>
             <property name="font">
              <font>
               <family>Cascadia Code</family>
               <pointsize>12</pointsize>
              </font>
             </property>
             <property name="styleSheet">
              <string notr="true">/* Style the QToolBox tab headers */
QToolBox::tab {
    color: #4d5966; /* Gunmetal Gray for text to maintain a modern look */
    border-radius: 10px; /* Slight rounding on tabs */
    padding: 5px 10px; /* Space inside the tabs */
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency for the tab background */
    transition: background-color 0.2s ease-in-out; /* Smooth hover transition */
}

/* Hover state for tabs */
QToolBox::tab:hover {
    background-color: rgba(0, 255, 204, 0.2); /* Neon Aqua with slight transparency for hover */
    color: #FFFFFF; /* White text for contrast */
}

/* Style the active tab header */
QToolBox::tab:selected {
    font: bold 16px;
    color: #f1b531; /* Golden Yellow for active tab text */
    border: 2px solid #00ffcc; /* Neon Aqua for the active tab border */
    background-color: rgba(31, 42, 68, 0.8); /* Midnight Blue for active tab background */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow effect for emphasis */
}

/* Style the content inside the QToolBox */
QToolBox QWidget {
    border-radius: 8px;
    filter: blur(5px); /* Lighter blur effect */
}</string>
             </property>
             <property name="frameShape">
              <enum>QFrame::Panel</enum>
             </property>
             <property name="frameShadow">
              <enum>QFrame::Raised</enum>
             </property>
             <property name="currentIndex">
              <number>0</number>
             </property>
             <widget class="QWidget" name="offline_setting_heading">
              <property name="geometry">
               <rect>
                <x>0</x>
                <y>0</y>
                <width>336</width>
                <height>629</height>
               </rect>
              </property>
              <attribute name="label">
               <string>Settings</string>
              </attribute>
              <attribute name="toolTip">
               <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Settings for offline video/image processing.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
              </attribute>
              <layout class="QVBoxLayout" name="verticalLayout_10">
               <item>
                <spacer name="verticalSpacer_18">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>10</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_21">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item alignment="Qt::AlignLeft">
                  <widget class="QToolButton" name="open_dir_button">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Default QPushButton style */
QToolButton {
    color:  #15e7e0; /* Primary logo color */
    text-align: center; /* Center-align text */
    background: transparent; /* No background */
    border: none; /* No border */
    font-size: 16px; /* Default font size */
	font-weight: bold;
    padding: 5px 10px; /* Add spacing for better clickability */
}

/* Hover effect for QPushButton */
QToolButton:hover {
    color: #f1b531; /* Highlight with logo's aqua color */
    font-weight: bold; /* Bold text on hover */
    /* font-size: 18px; /* Slightly larger font size */
	background-color: rgba(241, 181, 49, 0.1); /* Subtle hover background */
    border-radius: 10px; /* Rounded corners on hover */
}

/* Pressed state for QPushButton */
QToolButton:pressed {
    color: #27b2fd; /* Brighter blue for pressed effect */
    font-size: 16px; /* Reset font size */
}</string>
                   </property>
                   <property name="text">
                    <string>Open
directory</string>
                   </property>
                   <property name="icon">
                    <iconset resource="resources.qrc">
                     <normaloff>:/icons/icons/open_folder (1).ico</normaloff>:/icons/icons/open_folder (1).ico</iconset>
                   </property>
                   <property name="iconSize">
                    <size>
                     <width>40</width>
                     <height>40</height>
                    </size>
                   </property>
                   <property name="popupMode">
                    <enum>QToolButton::DelayedPopup</enum>
                   </property>
                   <property name="toolButtonStyle">
                    <enum>Qt::ToolButtonTextUnderIcon</enum>
                   </property>
                  </widget>
                 </item>
                 <item alignment="Qt::AlignRight">
                  <widget class="QToolButton" name="upload_button">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Default QPushButton style */
QToolButton {
    color:  #15e7e0; /* Primary logo color */
    text-align: center; /* Center-align text */
    background: transparent; /* No background */
    border: none; /* No border */
    font-size: 16px; /* Default font size */
	font-weight: bold;
    padding: 5px 10px; /* Add spacing for better clickability */
}

/* Hover effect for QPushButton */
QToolButton:hover {
    color: #f1b531; /* Highlight with logo's aqua color */
    font-weight: bold; /* Bold text on hover */
    /* font-size: 18px; /* Slightly larger font size */
	background-color: rgba(241, 181, 49, 0.1); /* Subtle hover background */
    border-radius: 10px; /* Rounded corners on hover */
}

/* Pressed state for QPushButton */
QToolButton:pressed {
    color: #27b2fd; /* Brighter blue for pressed effect */
    font-size: 16px; /* Reset font size */
}</string>
                   </property>
                   <property name="text">
                    <string>Upload
file</string>
                   </property>
                   <property name="icon">
                    <iconset resource="resources.qrc">
                     <normaloff>:/icons/icons/upload (1).ico</normaloff>:/icons/icons/upload (1).ico</iconset>
                   </property>
                   <property name="iconSize">
                    <size>
                     <width>40</width>
                     <height>40</height>
                    </size>
                   </property>
                   <property name="toolButtonStyle">
                    <enum>Qt::ToolButtonTextUnderIcon</enum>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <spacer name="verticalSpacer_17">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item alignment="Qt::AlignHCenter">
                <widget class="QLabel" name="label_13">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 18px;
    font-weight: bold;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                 </property>
                 <property name="text">
                  <string>Model selection</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>0</width>
                   <height>5</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <widget class="QComboBox" name="offline_modelselection">
                 <property name="maximumSize">
                  <size>
                   <width>318</width>
                   <height>34</height>
                  </size>
                 </property>
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Base QComboBox Style */
QComboBox {
    color: #15e7e0; /* Text color from logo */
    font-size: 14px;
    font-weight: bold;
    background: transparent; /* No background */
    border: 2px solid #27b2fd; /* Subtle blue border */
    border-radius: 5px;
    padding: 5px 10px;
}

/* Remove the default dropdown button background */
QComboBox::drop-down {
    border: none;
    background: transparent;
}

/* Dropdown List */
QComboBox QAbstractItemView {
    background-color: rgba(31, 42, 68, 0.9); /* Midnight blue with transparency */
    border: 2px solid #27b2fd; /* Blue border */
    selection-background-color: #f1b531; /* Golden yellow highlight */
    selection-color: #ffffff; /* White text */
    border-radius: 5px;
    padding: 5px;
}

/* Hover and Focus Effects */
QComboBox:hover, QComboBox:focus {
    border: 2px solid #f1b531; /* Change border color when active */
    color: #91ecfe; /* Slightly lighter text color */
}</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_2">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item alignment="Qt::AlignHCenter">
                <widget class="QLabel" name="label_23">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 18px;
    font-weight: bold;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                 </property>
                 <property name="text">
                  <string>Threshold</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="verticalSpacer_23">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeType">
                  <enum>QSizePolicy::Fixed</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>5</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_19">
                 <item alignment="Qt::AlignRight">
                  <widget class="QLabel" name="label_19">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>Conf:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_9">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>2</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="offline_conf_spinbox">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Style for the QSpinBox container */
QSpinBox {
    color: #f1f1f1;  /* Light text color */
    background-color: transparent;  /* No background */
    border: none;  /* No border */
    font-size: 16px;  /* Set font size */
    padding: 5px;  /* Padding inside the spin box */
}

/* Style for the up and down buttons in the QSpinBox */
QSpinBox::up-button, QSpinBox::down-button {
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    border: none;  /* No border */
    width: 20px;  /* Set width for buttons */
    height: 20px;  /* Set height for buttons */
    color: #f1f1f1;  /* Light text color for button */
}

/* Hover effect for the up and down buttons */
QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    background-color: rgba(0, 255, 204, 0.2);  /* Neon Aqua with slight transparency */
    color: #ffffff;  /* White text for contrast */
}

/* Style when the spinbox is focused (i.e., clicked or active) */
QSpinBox:focus {
    border: 2px solid #00ffcc;  /* Neon Aqua border */
    background-color: rgba(31, 42, 68, 0.8); /* Slightly darker Midnight Blue background */
    color: #f1b531;  /* Golden Yellow text */
}</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSlider" name="offline_conf_horizontalslider">
                   <property name="styleSheet">
                    <string notr="true">/* Base style for QSlider */
QSlider {
    background: transparent; /* No background */
    border: none;
    height: 8px; /* Slider height */
}

/* Handle of the slider */
QSlider::handle {
    background: #42ddbc; /* Color matching the logo */
    border: 2px solid #27b2fd; /* Blue border */
    width: 18px; /* Handle size */
    height: 18px;
    border-radius: 9px; /* Rounded handle */
    margin: -5px 0; /* Adjust handle positioning */
}

/* Hover effect for the slider handle */
QSlider::handle:hover {
    background: #f1b531; /* Golden Yellow on hover */
    border: 2px solid #00ffcc; /* Neon Aqua border */
}

/* Slider groove (the background of the slider) */
QSlider::groove:horizontal {
    border-radius: 4px;
    background: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    height: 8px;
}

/* Style the slider groove when the slider is active */
QSlider::groove:horizontal:active {
    background: rgba(31, 42, 68, 0.8); /* Darker shade for active groove */
}

/* Style for the tick marks on the slider (if enabled) */
QSlider::tick {
    background: #27b2fd; /* Blue color for ticks */
}

/* Style the ticks on hover */
QSlider::tick:hover {
    background: #f1b531; /* Golden Yellow for tick hover */
}</string>
                   </property>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_20">
                 <item alignment="Qt::AlignRight">
                  <widget class="QLabel" name="label_20">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                     <weight>50</weight>
                     <bold>false</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    color: #15e7e0; /* Matching logo color */
    font-size: 14px;
    font-weight: normal;
    background: transparent;
    padding-right: 5px; /* Spacing between label and input field */
}</string>
                   </property>
                   <property name="text">
                    <string>IoU:</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_10">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>11</width>
                     <height>5</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="offline_iou_spinbox">
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>-1</pointsize>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">/* Style for the QSpinBox container */
QSpinBox {
    color: #f1f1f1;  /* Light text color */
    background-color: transparent;  /* No background */
    border: none;  /* No border */
    font-size: 16px;  /* Set font size */
    padding: 5px;  /* Padding inside the spin box */
}

/* Style for the up and down buttons in the QSpinBox */
QSpinBox::up-button, QSpinBox::down-button {
    background-color: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    border: none;  /* No border */
    width: 20px;  /* Set width for buttons */
    height: 20px;  /* Set height for buttons */
    color: #f1f1f1;  /* Light text color for button */
}

/* Hover effect for the up and down buttons */
QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    background-color: rgba(0, 255, 204, 0.2);  /* Neon Aqua with slight transparency */
    color: #ffffff;  /* White text for contrast */
}

/* Style when the spinbox is focused (i.e., clicked or active) */
QSpinBox:focus {
    border: 2px solid #00ffcc;  /* Neon Aqua border */
    background-color: rgba(31, 42, 68, 0.8); /* Slightly darker Midnight Blue background */
    color: #f1b531;  /* Golden Yellow text */
}</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSlider" name="offline_iou_horizontalslider">
                   <property name="styleSheet">
                    <string notr="true">/* Base style for QSlider */
QSlider {
    background: transparent; /* No background */
    border: none;
    height: 8px; /* Slider height */
}

/* Handle of the slider */
QSlider::handle {
    background: #42ddbc; /* Color matching the logo */
    border: 2px solid #27b2fd; /* Blue border */
    width: 18px; /* Handle size */
    height: 18px;
    border-radius: 9px; /* Rounded handle */
    margin: -5px 0; /* Adjust handle positioning */
}

/* Hover effect for the slider handle */
QSlider::handle:hover {
    background: #f1b531; /* Golden Yellow on hover */
    border: 2px solid #00ffcc; /* Neon Aqua border */
}

/* Slider groove (the background of the slider) */
QSlider::groove:horizontal {
    border-radius: 4px;
    background: rgba(43, 48, 55, 0.7); /* Charcoal Black with transparency */
    height: 8px;
}

/* Style the slider groove when the slider is active */
QSlider::groove:horizontal:active {
    background: rgba(31, 42, 68, 0.8); /* Darker shade for active groove */
}

/* Style for the tick marks on the slider (if enabled) */
QSlider::tick {
    background: #27b2fd; /* Blue color for ticks */
}

/* Style the ticks on hover */
QSlider::tick:hover {
    background: #f1b531; /* Golden Yellow for tick hover */
}</string>
                   </property>
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <spacer name="verticalSpacer_16">
                 <property name="orientation">
                  <enum>Qt::Vertical</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>20</width>
                   <height>40</height>
                  </size>
                 </property>
                </spacer>
               </item>
              </layout>
             </widget>
             <widget class="QWidget" name="filter_header_2">
              <property name="geometry">
               <rect>
                <x>0</x>
                <y>0</y>
                <width>190</width>
                <height>50</height>
               </rect>
              </property>
              <attribute name="label">
               <string>Filters</string>
              </attribute>
              <layout class="QVBoxLayout" name="verticalLayout_19">
               <item>
                <widget class="QRadioButton" name="offline_ClassNames_radiobutton">
                 <property name="font">
                  <font>
                   <family>Cascadia Code</family>
                   <pointsize>-1</pointsize>
                  </font>
                 </property>
                 <property name="styleSheet">
                  <string notr="true">/* Style for QRadioButton (checkbox style) */
QRadioButton {
    color: #15e7e0;  /* Light text color */
    font-size: 16px;  /* Set font size */
    padding: 5px 20px;  /* Add padding */
    border: none;  /* No border */
    background: transparent;  /* Transparent background */
    spacing: 10px;  /* Space between checkbox and label */
    margin-left: 10px;  /* Ensure there's space for the text */
}

/* Style for the checkbox indicator (unchecked) */
QRadioButton::indicator {
    width: 18px;  /* Set the size of the checkbox */
    height: 18px;  /* Set the size of the checkbox */
    border: 2px solid #27b2fd;  /* Subtle blue border */
    border-radius: 10px;  /* Slightly rounded corners for checkbox */
    background-color: transparent;  /* Transparent background */
}

/* Style for the checkbox indicator when checked */
QRadioButton::indicator:checked {
    background-color: #f1b531;  /* Golden yellow background when checked */
    border: 2px solid #f1b531;  /* Golden yellow border */
    image: url(:/path/to/checkmark.png);  /* Optional: Add a checkmark image */
}

/* Hover effect for QRadioButton */
QRadioButton:hover {
    color: #f1b531;  /* Change text color to golden yellow on hover */
}

/* Focused state (when the checkbox is focused) */
QRadioButton:focus {
    outline: none;  /* Remove outline when focused */
}

/* Disabled state for QRadioButton */
QRadioButton:disabled {
    color: #4d5966;  /* Dim the text color to indicate disabled state */
}
</string>
                 </property>
                 <property name="text">
                  <string>class_name</string>
                 </property>
                </widget>
               </item>
              </layout>
             </widget>
            </widget>
           </item>
           <item>
            <spacer name="verticalSpacer_10">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>5</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_12">
             <item>
              <widget class="QPushButton" name="offline_reset_button">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #2b3037; /* Charcoal Black background for a modern, robust feel */
    color: #f1b531; /* White text for clarity */
    border: 2px solid #f1b531; /* Golden Yellow border for a vibrant contrast */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Segoe UI&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color: #f1b531; /* Golden Yellow for the hover background */
    color: #1f2a44; /* Midnight Blue text for contrast */
    border-color: #e6c31b; /* Softer Golden Yellow border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(241, 181, 49, 0.3); /* Soft golden glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Reset</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="offline_apply_button">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #2b3037; /* Charcoal Black background for a modern, robust feel */
    color: #00ffcc; /* Neon Aqua text for a vibrant, futuristic look */
    border: 2px solid #00ffcc; /* Neon Aqua border to maintain consistency */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Segoe UI&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color: #00ffcc; /* Neon Aqua for the hover background */
    color: #1f2a44; /* Midnight Blue for contrast text */
    border-color: #00ffcc; /* Keep the border the same on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(0, 255, 204, 0.3); /* Soft glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Apply</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_4">
         <property name="spacing">
          <number>0</number>
         </property>
        </layout>
       </item>
      </layout>
     </widget>
    </item>
    <item>
     <widget class="QStackedWidget" name="ui_stackedwidget">
      <property name="minimumSize">
       <size>
        <width>350</width>
        <height>0</height>
       </size>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QStackedWidget {
    background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek, modern look */
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    /* border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
      </property>
      <property name="currentIndex">
       <number>0</number>
      </property>
      <widget class="QWidget" name="page">
       <layout class="QHBoxLayout" name="horizontalLayout_3">
        <item>
         <widget class="QToolButton" name="toggle_menu_button_realtime">
          <property name="styleSheet">
           <string notr="true">/* Base style for the burger menu button */
QToolButton {
    background-color: transparent; /* Transparent background for a clean look */
    border: none; /* Remove any border */
    color: #f1b531; /* Golden Yellow for the icon */
    font-size: 30px; /* Larger font size for prominence */
    width: 40px; /* Adjust width for the button */
    height: 40px; /* Adjust height for the button */
    padding: 5px; /* Adjust padding */
    cursor: pointer; /* Cursor pointer to indicate it's clickable */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover and active states */
}

/* Hover effect for burger menu button */
QToolButton:hover {
    background-color: #4d5966; /* Gunmetal Gray background on hover */
    color: #ffffff; /* White icon for contrast */
    border-radius: 20px; /* Rounded button on hover */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow for depth */
}

/* Active (pressed) effect for burger menu button */
QToolButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background when pressed */
    color: #f1b531; /* Golden Yellow icon for contrast */
    transform: scale(0.95); /* Slight shrink for the pressed effect */
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}
</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/MenuButton (2).ico</normaloff>:/icons/icons/MenuButton (2).ico</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>50</width>
            <height>50</height>
           </size>
          </property>
          <property name="checkable">
           <bool>false</bool>
          </property>
          <property name="popupMode">
           <enum>QToolButton::InstantPopup</enum>
          </property>
          <property name="toolButtonStyle">
           <enum>Qt::ToolButtonIconOnly</enum>
          </property>
          <property name="autoRaise">
           <bool>false</bool>
          </property>
          <property name="arrowType">
           <enum>Qt::NoArrow</enum>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QFrame" name="frame_2">
          <property name="styleSheet">
           <string notr="true">QFrame {
    background-color: transparent; /* Charcoal Black with transparency for a sleek, modern look */
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
	margin: 100vh 0;
}</string>
          </property>
          <property name="frameShape">
           <enum>QFrame::StyledPanel</enum>
          </property>
          <property name="frameShadow">
           <enum>QFrame::Raised</enum>
          </property>
          <layout class="QVBoxLayout" name="verticalLayout_11">
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_7">
             <item>
              <widget class="QStackedWidget" name="realtime_stackedwidget">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="styleSheet">
                <string notr="true">QStackedWidget {
    background-color: transparent; /* Charcoal Black with transparency for a sleek, modern look */
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
               </property>
               <property name="currentIndex">
                <number>0</number>
               </property>
               <widget class="QWidget" name="page_3">
                <layout class="QVBoxLayout" name="verticalLayout">
                 <item>
                  <widget class="QLabel" name="Cam1_label">
                   <property name="maximumSize">
                    <size>
                     <width>120</width>
                     <height>50</height>
                    </size>
                   </property>
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>22</pointsize>
                     <weight>75</weight>
                     <italic>false</italic>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: transparent; /* Transparent background */
    color: #00ffcc; /* Neon Aqua for the title text */
    padding-left: 5px; /* Padding for alignment */
    font: bold; /* Bold text with larger size for emphasis */
}</string>
                   </property>
                   <property name="text">
                    <string>Cam 1</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="verticalSpacer_5">
                   <property name="orientation">
                    <enum>Qt::Vertical</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>20</width>
                     <height>5</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QLabel" name="Cam1_feed">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="font">
                    <font>
                     <pointsize>12</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                     <strikeout>false</strikeout>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: #2b3037; /* Charcoal Black background for a sleek, modern look */
    color: #ffffff; /* White text for visibility */
    border-radius: 8px; /* Rounded corners for a modern appearance */
	border: 3px solid #4d5966;
    /*padding: 10px; /* Padding for content spacing */
}</string>
                   </property>
                   <property name="text">
                    <string/>
                   </property>
                   <property name="textFormat">
                    <enum>Qt::AutoText</enum>
                   </property>
                   <property name="pixmap">
                    <pixmap>:/icons/noVid_icn.png</pixmap>
                   </property>
                   <property name="scaledContents">
                    <bool>false</bool>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignCenter</set>
                   </property>
                   <property name="wordWrap">
                    <bool>false</bool>
                   </property>
                  </widget>
                 </item>
                </layout>
               </widget>
               <widget class="QWidget" name="page_4">
                <layout class="QVBoxLayout" name="verticalLayout_6">
                 <item>
                  <widget class="QLabel" name="Cam2_label">
                   <property name="maximumSize">
                    <size>
                     <width>120</width>
                     <height>50</height>
                    </size>
                   </property>
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>22</pointsize>
                     <weight>75</weight>
                     <italic>false</italic>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: transparent; /* Transparent background */
    color: #00ffcc; /* Neon Aqua for the title text */
    padding-left: 5px; /* Padding for alignment */
    font: bold; /* Bold text with larger size for emphasis */
}</string>
                   </property>
                   <property name="text">
                    <string>Cam 2</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="verticalSpacer_4">
                   <property name="orientation">
                    <enum>Qt::Vertical</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>20</width>
                     <height>5</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QLabel" name="Cam2_feed">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="font">
                    <font>
                     <pointsize>12</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                     <strikeout>false</strikeout>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: #2b3037; /* Charcoal Black background for a sleek, modern look */
    color: #ffffff; /* White text for visibility */
    border-radius: 8px; /* Rounded corners for a modern appearance */
	border: 3px solid #4d5966;
    /*padding: 10px; /* Padding for content spacing */
}</string>
                   </property>
                   <property name="text">
                    <string/>
                   </property>
                   <property name="textFormat">
                    <enum>Qt::AutoText</enum>
                   </property>
                   <property name="pixmap">
                    <pixmap>:/icons/noVid_icn.png</pixmap>
                   </property>
                   <property name="scaledContents">
                    <bool>false</bool>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignCenter</set>
                   </property>
                   <property name="wordWrap">
                    <bool>true</bool>
                   </property>
                  </widget>
                 </item>
                </layout>
               </widget>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <spacer name="verticalSpacer_7">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>10</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_6">
             <property name="spacing">
              <number>0</number>
             </property>
             <item alignment="Qt::AlignLeft">
              <widget class="QPushButton" name="prev_button">
               <property name="styleSheet">
                <string notr="true">/* Base style for the Next button */
QPushButton {
    background-color: transparent; /* Blue background to match the logo */
    color: #ffffff; /* White text for contrast */
    /*border: 2px solid #27b2fd; /* Matching blue border */
    border-radius: 24px; /* Rounded corners for a smooth look */
    padding: 12px 24px; /* Adjust padding for size */
    font: bold 16px &quot;Segoe UI&quot;, Arial, sans-serif; /* Modern, bold font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth transition for hover and active states */
}

/* Hover effect for Next button */
QPushButton:hover {
    background-color: #00ffcc; /* Neon Aqua for hover */
    color: #ffffff; /* White text for contrast */
    border-color: #91ecfe; /* Softer border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
}

/* Active (pressed) effect for Next button */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue when pressed */
    color: #ffffff; /* White text */
    border-color: #42ddbc; /* Lighter teal border */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}

/* Disabled state for Next button */
QPushButton:disabled {
    background-color: #b0b0b0; /* Light gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #a0a0a0; /* Softer border */
    box-shadow: none; /* No shadow for disabled state */
}</string>
               </property>
               <property name="text">
                <string/>
               </property>
               <property name="icon">
                <iconset resource="resources.qrc">
                 <normaloff>:/icons/icons/PrevButton (5).ico</normaloff>:/icons/icons/PrevButton (5).ico</iconset>
               </property>
               <property name="iconSize">
                <size>
                 <width>25</width>
                 <height>25</height>
                </size>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="realtime_start_button">
               <property name="maximumSize">
                <size>
                 <width>150</width>
                 <height>50</height>
                </size>
               </property>
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color:#00ffcc ; /* Charcoal Black background for a modern, robust feel */
    color: #2b3037; /* Neon Aqua text for a vibrant, futuristic look */
    border: 2px solid #2b3037; /* Neon Aqua border to maintain consistency */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Cascadia Code&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */

}

/* Hover effect */
QPushButton:hover {
    background-color: #1f2a44; /* Neon Aqua for the hover background */
    color: #00ffcc; /* Midnight Blue for contrast text */
    border-color: #00ffcc; /* Keep the border the same on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(0, 255, 204, 0.3); /* Soft glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Start</string>
               </property>
              </widget>
             </item>
             <item>
              <spacer name="horizontalSpacer_2">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeType">
                <enum>QSizePolicy::Fixed</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item>
              <widget class="QPushButton" name="realtime_stop_button">
               <property name="maximumSize">
                <size>
                 <width>150</width>
                 <height>100</height>
                </size>
               </property>
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #f1b531; /* Charcoal Black background for a modern, robust feel */
    color: #2b3037; /* White text for clarity */
    border: 2px solid #2b3037; /* Golden Yellow border for a vibrant contrast */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Segoe UI&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color:#1f2a44; /* Golden Yellow for the hover background */
    color:  #f1b531; /* Midnight Blue text for contrast */
    border-color:  #f1b531; /* Softer Golden Yellow border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(241, 181, 49, 0.3); /* Soft golden glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Stop</string>
               </property>
              </widget>
             </item>
             <item alignment="Qt::AlignRight">
              <widget class="QPushButton" name="next_button">
               <property name="styleSheet">
                <string notr="true">/* Base style for the Next button */
QPushButton {
    background-color: transparent; /* Blue background to match the logo */
    color: #ffffff; /* White text for contrast */
    /*border: 2px solid #27b2fd; /* Matching blue border */
    border-radius: 24px; /* Rounded corners for a smooth look */
    padding: 12px 24px; /* Adjust padding for size */
    font: bold 16px &quot;Segoe UI&quot;, Arial, sans-serif; /* Modern, bold font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth transition for hover and active states */
}

/* Hover effect for Next button */
QPushButton:hover {
    background-color: #00ffcc; /* Neon Aqua for hover */
    color: #ffffff; /* White text for contrast */
    border-color: #91ecfe; /* Softer border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
}

/* Active (pressed) effect for Next button */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue when pressed */
    color: #ffffff; /* White text */
    border-color: #42ddbc; /* Lighter teal border */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}

/* Disabled state for Next button */
QPushButton:disabled {
    background-color: #b0b0b0; /* Light gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #a0a0a0; /* Softer border */
    box-shadow: none; /* No shadow for disabled state */
}</string>
               </property>
               <property name="text">
                <string/>
               </property>
               <property name="icon">
                <iconset resource="resources.qrc">
                 <normaloff>:/icons/icons/NextButton (5).ico</normaloff>:/icons/icons/NextButton (5).ico</iconset>
               </property>
               <property name="iconSize">
                <size>
                 <width>25</width>
                 <height>25</height>
                </size>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
        </item>
        <item>
         <widget class="QToolButton" name="toggle_findings_button_realtime">
          <property name="styleSheet">
           <string notr="true">/* Base style for the burger menu button */
QToolButton {
    background-color: transparent; /* Transparent background for a clean look */
    border: none; /* Remove any border */
    color: #f1b531; /* Golden Yellow for the icon */
    font-size: 30px; /* Larger font size for prominence */
    width: 40px; /* Adjust width for the button */
    height: 40px; /* Adjust height for the button */
    padding: 5px; /* Adjust padding */
    cursor: pointer; /* Cursor pointer to indicate it's clickable */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover and active states */
}

/* Hover effect for burger menu button */
QToolButton:hover {
    background-color: #4d5966; /* Gunmetal Gray background on hover */
    color: #ffffff; /* White icon for contrast */
    border-radius: 20px; /* Rounded button on hover */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow for depth */
}

/* Active (pressed) effect for burger menu button */
QToolButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background when pressed */
    color: #f1b531; /* Golden Yellow icon for contrast */
    transform: scale(0.95); /* Slight shrink for the pressed effect */
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}
</string>
          </property>
          <property name="text">
           <string>...</string>
          </property>
          <property name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/Arrow_R (3).ico</normaloff>:/icons/icons/Arrow_R (3).ico</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>50</width>
            <height>50</height>
           </size>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QFrame" name="findings_frame_realtime">
          <property name="minimumSize">
           <size>
            <width>350</width>
            <height>250</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QFrame {
    background-color: transparent; /* Charcoal Black with transparency for a sleek, modern look */
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
          </property>
          <property name="frameShape">
           <enum>QFrame::StyledPanel</enum>
          </property>
          <property name="frameShadow">
           <enum>QFrame::Raised</enum>
          </property>
          <layout class="QHBoxLayout" name="horizontalLayout_7">
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_8">
             <property name="spacing">
              <number>5</number>
             </property>
             <item alignment="Qt::AlignHCenter">
              <widget class="QLabel" name="findings_label_realtime">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>22</pointsize>
                 <weight>75</weight>
                 <italic>false</italic>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">QLabel {
    background-color: transparent; /* Transparent background */
    color: #00ffcc; /* Neon Aqua for the title text */
    padding-left: 5px; /* Padding for alignment */
    font: bold; /* Bold text with larger size for emphasis */
}</string>
               </property>
               <property name="text">
                <string>Findings</string>
               </property>
              </widget>
             </item>
             <item>
              <spacer name="verticalSpacer_3">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeType">
                <enum>QSizePolicy::Fixed</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>5</height>
                </size>
               </property>
              </spacer>
             </item>
             <item alignment="Qt::AlignHCenter">
              <widget class="QListView" name="realtime_listview">
               <property name="minimumSize">
                <size>
                 <width>320</width>
                 <height>0</height>
                </size>
               </property>
               <property name="styleSheet">
                <string notr="true">QListView {
	background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek effect */
	border: 2px solid #00ffcc; /* Neon Aqua border */
}</string>
               </property>
               <property name="wordWrap">
                <bool>true</bool>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
        </item>
       </layout>
      </widget>
      <widget class="QWidget" name="page_2">
       <layout class="QHBoxLayout" name="horizontalLayout_11">
        <item>
         <widget class="QToolButton" name="toggle_menu_button_offline">
          <property name="styleSheet">
           <string notr="true">/* Base style for the burger menu button */
QToolButton {
    background-color: transparent; /* Transparent background for a clean look */
    border: none; /* Remove any border */
    color: #f1b531; /* Golden Yellow for the icon */
    font-size: 30px; /* Larger font size for prominence */
    width: 40px; /* Adjust width for the button */
    height: 40px; /* Adjust height for the button */
    padding: 5px; /* Adjust padding */
    cursor: pointer; /* Cursor pointer to indicate it's clickable */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover and active states */
}

/* Hover effect for burger menu button */
QToolButton:hover {
    background-color: #4d5966; /* Gunmetal Gray background on hover */
    color: #ffffff; /* White icon for contrast */
    border-radius: 20px; /* Rounded button on hover */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow for depth */
}

/* Active (pressed) effect for burger menu button */
QToolButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background when pressed */
    color: #f1b531; /* Golden Yellow icon for contrast */
    transform: scale(0.95); /* Slight shrink for the pressed effect */
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}
</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/MenuButton (2).ico</normaloff>:/icons/icons/MenuButton (2).ico</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>50</width>
            <height>50</height>
           </size>
          </property>
          <property name="checkable">
           <bool>false</bool>
          </property>
          <property name="popupMode">
           <enum>QToolButton::InstantPopup</enum>
          </property>
          <property name="toolButtonStyle">
           <enum>Qt::ToolButtonIconOnly</enum>
          </property>
          <property name="autoRaise">
           <bool>false</bool>
          </property>
          <property name="arrowType">
           <enum>Qt::NoArrow</enum>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QFrame" name="frame_4">
          <property name="styleSheet">
           <string notr="true">QFrame {
    /* background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek, modern look */
	background-color: transparent;
    /* filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    /* border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
          </property>
          <property name="frameShape">
           <enum>QFrame::StyledPanel</enum>
          </property>
          <property name="frameShadow">
           <enum>QFrame::Raised</enum>
          </property>
          <layout class="QVBoxLayout" name="verticalLayout_17">
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_18">
             <item>
              <widget class="QStackedWidget" name="stackedWidget_3">
               <property name="styleSheet">
                <string notr="true">QStackedWidget {
    background-color: transparent; /* Charcoal Black with transparency for a sleek, modern look */
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
               </property>
               <property name="currentIndex">
                <number>0</number>
               </property>
               <widget class="QWidget" name="page_5">
                <layout class="QVBoxLayout" name="verticalLayout_4">
                 <item>
                  <widget class="QLabel" name="offline_label">
                   <property name="maximumSize">
                    <size>
                     <width>200</width>
                     <height>50</height>
                    </size>
                   </property>
                   <property name="font">
                    <font>
                     <family>Cascadia Code</family>
                     <pointsize>22</pointsize>
                     <weight>75</weight>
                     <italic>false</italic>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: transparent; /* Transparent background */
    color: #00ffcc; /* Neon Aqua for the title text */
    padding-left: 5px; /* Padding for alignment */
    font: bold; /* Bold text with larger size for emphasis */
}</string>
                   </property>
                   <property name="text">
                    <string>Offline</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="verticalSpacer_8">
                   <property name="orientation">
                    <enum>Qt::Vertical</enum>
                   </property>
                   <property name="sizeType">
                    <enum>QSizePolicy::Fixed</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>20</width>
                     <height>5</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QLabel" name="offline_feed">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="font">
                    <font>
                     <pointsize>12</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                     <strikeout>false</strikeout>
                    </font>
                   </property>
                   <property name="styleSheet">
                    <string notr="true">QLabel {
    background-color: #2b3037; /* Charcoal Black background for a sleek, modern look */
    color: #ffffff; /* White text for visibility */
    border-radius: 8px; /* Rounded corners for a modern appearance */
	border: 3px solid #4d5966;
    /*padding: 10px; /* Padding for content spacing */
}</string>
                   </property>
                   <property name="text">
                    <string/>
                   </property>
                   <property name="textFormat">
                    <enum>Qt::AutoText</enum>
                   </property>
                   <property name="pixmap">
                    <pixmap>:/icons/noVid_icn.png</pixmap>
                   </property>
                   <property name="scaledContents">
                    <bool>false</bool>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignCenter</set>
                   </property>
                   <property name="wordWrap">
                    <bool>false</bool>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QProgressBar" name="offline_progressbar">
                   <property name="styleSheet">
                    <string notr="true">/* General style for QProgressBar */
QProgressBar {
    border: none; /* No border */
    background: transparent; /* Transparent background */
    text-align: center; /* Center text inside the progress bar */
    color: #f1f1f1; /* Light text color */
    padding: 5px; /* Some padding inside the bar */
}

/* Style for the progress indicator (filled part of the bar) */
QProgressBar::chunk {
    background-color: #00ffcc; /* Neon Aqua for the progress chunk */
    border-radius: 10px; /* Rounded edges for the progress chunk */
    width: 20px; /* Minimum width of each progress chunk */
}

/* Style for the text inside the progress bar */
QProgressBar::indicator {
    color: #f1b531; /* Golden Yellow for the text */
    font-weight: bold;
}
</string>
                   </property>
                   <property name="value">
                    <number>24</number>
                   </property>
                  </widget>
                 </item>
                </layout>
               </widget>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <spacer name="verticalSpacer_12">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>10</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_9">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QPushButton" name="offline_start_button">
               <property name="maximumSize">
                <size>
                 <width>150</width>
                 <height>50</height>
                </size>
               </property>
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <italic>false</italic>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color:#00ffcc ; /* Charcoal Black background for a modern, robust feel */
    color: #2b3037; /* Neon Aqua text for a vibrant, futuristic look */
    border: 2px solid #2b3037; /* Neon Aqua border to maintain consistency */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Cascadia Code&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */

}

/* Hover effect */
QPushButton:hover {
    background-color: #1f2a44; /* Neon Aqua for the hover background */
    color: #00ffcc; /* Midnight Blue for contrast text */
    border-color: #00ffcc; /* Keep the border the same on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(0, 255, 204, 0.3); /* Soft glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Start</string>
               </property>
              </widget>
             </item>
             <item>
              <spacer name="horizontalSpacer_4">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeType">
                <enum>QSizePolicy::Fixed</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>100</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item>
              <widget class="QPushButton" name="offline_stop_button">
               <property name="maximumSize">
                <size>
                 <width>150</width>
                 <height>100</height>
                </size>
               </property>
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>12</pointsize>
                 <weight>75</weight>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">/* Base style for QPushButton */
QPushButton {
    background-color: #f1b531; /* Charcoal Black background for a modern, robust feel */
    color: #2b3037; /* White text for clarity */
    border: 2px solid #2b3037; /* Golden Yellow border for a vibrant contrast */
    border-radius: 10px; /* Smooth rounded corners */
    padding: 12px 24px; /* Adjust padding for size */
    /* font: bold 14px &quot;Segoe UI&quot;, Arial, sans-serif; /* Clean modern font */
    letter-spacing: 1px; /* Slight letter spacing for elegance */
    text-transform: uppercase; /* Capitalized text for emphasis */
    transition: all 0.3s ease; /* Smooth animations */
}

/* Hover effect */
QPushButton:hover {
    background-color:#1f2a44; /* Golden Yellow for the hover background */
    color:  #f1b531; /* Midnight Blue text for contrast */
    border-color:  #f1b531; /* Softer Golden Yellow border on hover */
    transform: translateY(-2px); /* Lift the button slightly */
    box-shadow: 0px 8px 15px rgba(241, 181, 49, 0.3); /* Soft golden glow effect */
}

/* Pressed (clicked) effect */
QPushButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background on press */
    color: #ffffff; /* White text for contrast */
    border-color: #4d5966; /* Gunmetal Gray border on press */
    transform: translateY(2px); /* Slight press effect */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Disabled state */
QPushButton:disabled {
    background-color: #4d5966; /* Gunmetal Gray for disabled state */
    color: #ffffff; /* White text */
    border-color: #4d5966; /* Matching border */
    box-shadow: none; /* No shadow for disabled */
}</string>
               </property>
               <property name="text">
                <string>Stop</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
        </item>
        <item>
         <widget class="QToolButton" name="toggle_findings_button_offline">
          <property name="styleSheet">
           <string notr="true">/* Base style for the burger menu button */
QToolButton {
    background-color: transparent; /* Transparent background for a clean look */
    border: none; /* Remove any border */
    color: #f1b531; /* Golden Yellow for the icon */
    font-size: 30px; /* Larger font size for prominence */
    width: 40px; /* Adjust width for the button */
    height: 40px; /* Adjust height for the button */
    padding: 5px; /* Adjust padding */
    cursor: pointer; /* Cursor pointer to indicate it's clickable */
    transition: all 0.3s ease-in-out; /* Smooth transition for hover and active states */
}

/* Hover effect for burger menu button */
QToolButton:hover {
    background-color: #4d5966; /* Gunmetal Gray background on hover */
    color: #ffffff; /* White icon for contrast */
    border-radius: 20px; /* Rounded button on hover */
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Subtle shadow for depth */
}

/* Active (pressed) effect for burger menu button */
QToolButton:pressed {
    background-color: #1f2a44; /* Midnight Blue background when pressed */
    color: #f1b531; /* Golden Yellow icon for contrast */
    transform: scale(0.95); /* Slight shrink for the pressed effect */
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */
}
</string>
          </property>
          <property name="text">
           <string>...</string>
          </property>
          <property name="icon">
           <iconset resource="resources.qrc">
            <normaloff>:/icons/icons/Arrow_R (3).ico</normaloff>:/icons/icons/Arrow_R (3).ico</iconset>
          </property>
          <property name="iconSize">
           <size>
            <width>50</width>
            <height>50</height>
           </size>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QFrame" name="findings_frame_offline">
          <property name="minimumSize">
           <size>
            <width>350</width>
            <height>250</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QFrame {
    /* background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek, modern look */
	background-color: transparent;
    filter: blur(5px); /* Reduced blur for better clarity */
    height: 100%;
    border-radius: 12px; /* Rounded corners for a modern look */
    transition: background-color 0.3s ease, filter 0.3s ease; /* Smooth transitions */
}</string>
          </property>
          <property name="frameShape">
           <enum>QFrame::StyledPanel</enum>
          </property>
          <property name="frameShadow">
           <enum>QFrame::Raised</enum>
          </property>
          <layout class="QHBoxLayout" name="horizontalLayout_10">
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_20">
             <property name="spacing">
              <number>5</number>
             </property>
             <item alignment="Qt::AlignHCenter">
              <widget class="QLabel" name="findings_label_offline">
               <property name="font">
                <font>
                 <family>Cascadia Code</family>
                 <pointsize>22</pointsize>
                 <weight>75</weight>
                 <italic>false</italic>
                 <bold>true</bold>
                </font>
               </property>
               <property name="styleSheet">
                <string notr="true">QLabel {
    background-color: transparent; /* Transparent background */
    color: #00ffcc; /* Neon Aqua for the title text */
    padding-left: 5px; /* Padding for alignment */
    font: bold; /* Bold text with larger size for emphasis */
}</string>
               </property>
               <property name="text">
                <string>Findings</string>
               </property>
              </widget>
             </item>
             <item>
              <spacer name="verticalSpacer_6">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeType">
                <enum>QSizePolicy::Fixed</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>5</height>
                </size>
               </property>
              </spacer>
             </item>
             <item alignment="Qt::AlignHCenter">
              <widget class="QListView" name="offline_listview">
               <property name="minimumSize">
                <size>
                 <width>320</width>
                 <height>0</height>
                </size>
               </property>
               <property name="styleSheet">
                <string notr="true">QListView {
	background-color: rgba(43, 48, 55, 0.6); /* Charcoal Black with transparency for a sleek effect */
	border: 2px solid #00ffcc; /* Neon Aqua border */
}</string>
               </property>
               <property name="wordWrap">
                <bool>true</bool>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </widget>
        </item>
       </layout>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
 </widget>
 <resources>
  <include location="resources.qrc"/>
 </resources>
 <connections/>
</ui>
